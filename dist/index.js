(()=>{"use strict";class e{api;constructor(e){this.api=e}async getRequest(e){return await this.api.makeRequest("GET",e)}async postRequest(e,t,s=void 0){return await this.api.makeRequest("POST",e,t,s)}async putRequest(e,t,s=void 0){return await this.api.makeRequest("PUT",e,t,s)}async deleteRequest(e,t){return await this.api.makeRequest("DELETE",e,t)}paramsFor(e){const t=new URLSearchParams;for(let s of Object.getOwnPropertyNames(e))(e[s]||0===e[s]||!e[s]&&"boolean"==typeof e[s])&&t.append(s,e[s].toString());return[...t].length>0?`?${t.toString()}`:""}}class t extends e{async get(e,t){if("string"==typeof e){const s=this.paramsFor({market:t});return await this.getRequest(`albums/${e}${s}`)}const s=this.paramsFor({ids:e,market:t});return(await this.getRequest(`albums${s}`)).albums}tracks(e,t,s,i){const r=this.paramsFor({market:t,limit:s,offset:i});return this.getRequest(`albums/${e}/tracks${r}`)}}class s extends e{async get(e){if("string"==typeof e){return this.getRequest(`artists/${e}`)}const t=this.paramsFor({ids:e});return(await this.getRequest(`artists${t}`)).artists}albums(e,t,s,i,r){const n=this.paramsFor({include_groups:t,market:s,limit:i,offset:r});return this.getRequest(`artists/${e}/albums${n}`)}topTracks(e,t){const s=this.paramsFor({market:t});return this.getRequest(`artists/${e}/top-tracks${s}`)}relatedArtists(e){return this.getRequest(`artists/${e}/related-artists`)}}class i extends e{async get(e,t){if("string"==typeof e){const s=this.paramsFor({market:t});return this.getRequest(`audiobooks/${e}${s}`)}const s=this.paramsFor({ids:e,market:t});return(await this.getRequest(`audiobooks${s}`)).audiobooks}getAudiobookChapters(e,t,s,i){const r=this.paramsFor({market:t,limit:s,offset:i});return this.getRequest(`audiobooks/${e}/chapters${r}`)}}class r extends e{getCategories(e,t,s,i){const r=this.paramsFor({country:e,locale:t,limit:s,offset:i});return this.getRequest(`browse/categories${r}`)}getCategory(e,t,s){const i=this.paramsFor({country:t,locale:s});return this.getRequest(`browse/categories/${e}${i}`)}getNewReleases(e,t,s){const i=this.paramsFor({country:e,limit:t,offset:s});return this.getRequest(`browse/new-releases${i}`)}getFeaturedPlaylists(e,t,s,i,r){const n=this.paramsFor({country:e,locale:t,timestamp:s,limit:i,offset:r});return this.getRequest(`browse/featured-playlists${n}`)}getPlaylistsForCategory(e,t,s,i){const r=this.paramsFor({country:t,limit:s,offset:i});return this.getRequest(`browse/categories/${e}/playlists${r}`)}}class n extends e{async get(e,t){if("string"==typeof e){const s=this.paramsFor({market:t});return this.getRequest(`chapters/${e}${s}`)}const s=this.paramsFor({ids:e,market:t});return(await this.getRequest(`chapters${s}`)).chapters}}class a extends e{async get(e,t){if("string"==typeof e){const s=this.paramsFor({market:t});return this.getRequest(`episodes/${e}${s}`)}const s=this.paramsFor({ids:e,market:t});return(await this.getRequest(`episodes${s}`)).episodes}}class o extends e{get(e){const t=this.paramsFor(e);return this.getRequest(`recommendations${t}`)}genreSeeds(){return this.getRequest("recommendations/available-genre-seeds")}}class c extends e{getAvailableMarkets(){return this.getRequest("markets")}}class h extends e{getPlaybackState(e,t){const s=this.paramsFor({market:e,additional_types:t});return this.getRequest(`me/player${s}`)}getAvailableDevices(){return this.getRequest("me/player/devices")}getCurrentlyPlayingTrack(e,t){const s=this.paramsFor({market:e,additional_types:t});return this.getRequest(`me/player/currently-playing${s}`)}getRecentlyPlayedTracks(e,t){const s={limit:e};t&&("before"===t.type?s.before=t.timestamp:"after"===t.type&&(s.after=t.timestamp));const i=this.paramsFor(s);return this.getRequest(`me/player/recently-played${i}`)}getUsersQueue(){return this.getRequest("me/player/queue")}async transferPlayback(e,t){if(e.length>1)throw new Error("Although an array is accepted, only a single device_id is currently supported. Supplying more than one will return 400 Bad Request");await this.putRequest("me/player",{device_ids:e,play:t})}async startResumePlayback(e,t,s,i,r){const n=this.paramsFor({device_id:e});await this.putRequest(`me/player/play${n}`,{context_uri:t,uris:s,offset:i,positionMs:r})}async pausePlayback(e){const t=this.paramsFor({device_id:e});await this.putRequest(`me/player/pause${t}`)}async skipToNext(e){const t=this.paramsFor({device_id:e});await this.postRequest(`me/player/next${t}`)}async skipToPrevious(e){const t=this.paramsFor({device_id:e});await this.postRequest(`me/player/previous${t}`)}async seekToPosition(e,t){const s=this.paramsFor({position_ms:e,device_id:t});await this.putRequest(`me/player/seek${s}`)}async setRepeatMode(e,t){const s=this.paramsFor({state:e,device_id:t});await this.putRequest(`me/player/repeat${s}`)}async setPlaybackVolume(e,t){const s=this.paramsFor({volume_percent:e,device_id:t});await this.putRequest(`me/player/volume${s}`)}async togglePlaybackShuffle(e,t){const s=this.paramsFor({state:e,device_id:t});await this.putRequest(`me/player/shuffle${s}`)}async addItemToPlaybackQueue(e,t){const s=this.paramsFor({uri:e,device_id:t});await this.postRequest(`me/player/queue${s}`)}}class u extends e{getPlaylist(e,t,s,i){const r=this.paramsFor({market:t,fields:s,additional_types:i?.join(",")});return this.getRequest(`playlists/${e}${r}`)}getPlaylistItems(e,t,s,i,r,n){const a=this.paramsFor({market:t,fields:s,limit:i,offset:r,additional_types:n?.join(",")});return this.getRequest(`playlists/${e}/tracks${a}`)}async changePlaylistDetails(e,t){await this.putRequest(`playlists/${e}`,t)}movePlaylistItems(e,t,s,i){return this.updatePlaylistItems(e,{range_start:t,range_length:s,insert_before:i})}updatePlaylistItems(e,t){return this.putRequest(`playlists/${e}/tracks`,t)}async addItemsToPlaylist(e,t,s){await this.postRequest(`playlists/${e}/tracks`,{position:s,uris:t})}async removeItemsFromPlaylist(e,t){await this.deleteRequest(`playlists/${e}/tracks`,t)}getUsersPlaylists(e,t,s){const i=this.paramsFor({limit:t,offset:s});return this.getRequest(`users/${e}/playlists${i}`)}createPlaylist(e,t){return this.postRequest(`users/${e}/playlists`,t)}getPlaylistCoverImage(e){return this.getRequest(`playlists/${e}/images`)}async addCustomPlaylistCoverImage(e,t){let s="";if(t instanceof Buffer)s=t.toString("base64");else if(t instanceof HTMLCanvasElement)s=t.toDataURL("image/jpeg").split(";base64,")[1];else if(t instanceof HTMLImageElement){const e=document.createElement("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");if(!i)throw new Error("Could not get canvas context");i.drawImage(t,0,0),s=e.toDataURL("image/jpeg").split(";base64,")[1]}else{if("string"!=typeof t)throw new Error("ImageData must be a Buffer, HTMLImageElement, HTMLCanvasElement, or string containing a base64 encoded jpeg");s=t}await this.addCustomPlaylistCoverImageFromBase64String(e,s)}async addCustomPlaylistCoverImageFromBase64String(e,t){await this.putRequest(`playlists/${e}/images`,t,"image/jpeg")}}class l extends e{async execute(e,t,s,i,r,n){const a=this.paramsFor({q:e,type:t,market:s,limit:i,offset:r,include_external:n});return await this.getRequest(`search${a}`)}}class p extends e{async get(e,t){if("string"==typeof e){const s=this.paramsFor({market:t});return this.getRequest(`shows/${e}${s}`)}const s=this.paramsFor({ids:e,market:t});return(await this.getRequest(`shows${s}`)).shows}episodes(e,t,s,i){const r=this.paramsFor({market:t,limit:s,offset:i});return this.getRequest(`shows/${e}/episodes${r}`)}}class d extends e{async get(e,t){if("string"==typeof e){const s=this.paramsFor({market:t});return this.getRequest(`tracks/${e}${s}`)}const s=this.paramsFor({ids:e,market:t});return(await this.getRequest(`tracks${s}`)).tracks}async audioFeatures(e){if("string"==typeof e)return this.getRequest(`audio-features/${e}`);const t=this.paramsFor({ids:e});return(await this.getRequest(`audio-features${t}`)).audio_features}audioAnalysis(e){return this.getRequest(`audio-analysis/${e}`)}}const f={access_token:"emptyAccessToken",token_type:"",expires_in:0,refresh_token:"",expires:-1};function y(e){return e===f}class m extends e{profile(e){return this.getRequest(`users/${e}`)}}class g extends e{albums;audiobooks;episodes;playlists;shows;tracks;constructor(e){super(e),this.albums=new w(e),this.audiobooks=new k(e),this.episodes=new v(e),this.playlists=new b(e),this.shows=new R(e),this.tracks=new S(e)}profile(){return this.getRequest("me")}topItems(e,t,s,i){const r=this.paramsFor({time_range:t,limit:s,offset:i});return this.getRequest(`me/top/${e}${r}`)}followedArtists(e,t){const s=this.paramsFor({type:"artist",after:e,limit:t});return this.getRequest(`me/following${s}`)}async followArtistsOrUsers(e,t){const s=this.paramsFor({type:t});await this.putRequest(`me/following${s}`,{ids:e})}async unfollowArtistsOrUsers(e,t){const s=this.paramsFor({type:t});await this.deleteRequest(`me/following${s}`,{ids:e})}followsArtistsOrUsers(e,t){const s=this.paramsFor({ids:e,type:t});return this.getRequest(`me/following/contains${s}`)}}class w extends e{savedAlbums(e,t,s){const i=this.paramsFor({limit:e,offset:t,market:s});return this.getRequest(`me/albums${i}`)}async saveAlbums(e){await this.putRequest("me/albums",e)}async removeSavedAlbums(e){await this.deleteRequest("me/albums",e)}hasSavedAlbums(e){const t=this.paramsFor({ids:e});return this.getRequest(`me/albums/contains${t}`)}}class k extends e{savedAudiobooks(e,t){const s=this.paramsFor({limit:e,offset:t});return this.getRequest(`me/audiobooks${s}`)}async saveAudiobooks(e){await this.putRequest("me/audiobooks",e)}async removeSavedAudiobooks(e){await this.deleteRequest("me/audiobooks",e)}hasSavedAudiobooks(e){const t=this.paramsFor({ids:e});return this.getRequest(`me/audiobooks/contains${t}`)}}class v extends e{savedEpisodes(e,t,s){const i=this.paramsFor({market:e,limit:t,offset:s});return this.getRequest(`me/episodes${i}`)}async saveEpisodes(e){await this.putRequest("me/episodes",e)}async removeSavedEpisodes(e){await this.deleteRequest("me/episodes",e)}hasSavedEpisodes(e){const t=this.paramsFor({ids:e});return this.getRequest(`me/episodes/contains${t}`)}}class b extends e{playlists(e,t){const s=this.paramsFor({limit:e,offset:t});return this.getRequest(`me/playlists${s}`)}async follow(e){await this.putRequest(`playlists/${e}/followers`)}async unfollow(e){await this.deleteRequest(`playlists/${e}/followers`)}isFollowing(e,t){const s=this.paramsFor({ids:t});return this.getRequest(`playlists/${e}/followers/contains${s}`)}}class R extends e{savedShows(e,t){const s=this.paramsFor({limit:e,offset:t});return this.getRequest(`me/shows${s}`)}saveShows(e){const t=this.paramsFor({ids:e});return this.putRequest(`me/shows${t}`)}removeSavedShows(e,t){const s=this.paramsFor({ids:e,market:t});return this.deleteRequest(`me/shows${s}`)}hasSavedShow(e){const t=this.paramsFor({ids:e});return this.getRequest(`me/shows/contains${t}`)}}class S extends e{savedTracks(e,t,s){const i=this.paramsFor({limit:e,offset:t,market:s});return this.getRequest(`me/tracks${i}`)}async saveTracks(e){await this.putRequest("me/tracks",e)}async removeSavedTracks(e){await this.deleteRequest("me/tracks",e)}hasSavedTracks(e){const t=this.paramsFor({ids:e});return this.getRequest(`me/tracks/contains${t}`)}}class _{static get current(){return this.hasSubtleCrypto?window.crypto:this.tryLoadNodeWebCrypto()}static get hasSubtleCrypto(){return"undefined"!=typeof window&&void 0!==window.crypto&&void 0!==window.crypto.subtle}static tryLoadNodeWebCrypto(){try{const{webcrypto:e}=require("crypto");return e}catch(e){throw e}}}class T{static async refreshCachedAccessToken(e,t){const s=await T.refreshToken(e,t.refresh_token);return T.toCachable(s)}static toCachable(e){return e.expires&&-1===e.expires?e:{...e,expires:this.calculateExpiry(e)}}static calculateExpiry(e){return Date.now()+1e3*e.expires_in}static async refreshToken(e,t){const s=new URLSearchParams;s.append("client_id",e),s.append("grant_type","refresh_token"),s.append("refresh_token",t);const i=await fetch("https://accounts.spotify.com/api/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:s}),r=await i.text();if(!i.ok)throw new Error(`Failed to refresh token: ${i.statusText}, ${r}`);return JSON.parse(r)}static generateCodeVerifier(e){let t="",s="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let i=0;i<e;i++)t+=s.charAt(Math.floor(62*Math.random()));return t}static async generateCodeChallenge(e){const t=(new TextEncoder).encode(e),s=await _.current.subtle.digest("SHA-256",t),i=[...new Uint8Array(s)];return("undefined"!=typeof Buffer?Buffer.from(s).toString("base64"):btoa(String.fromCharCode.apply(null,i))).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}}class x{clientId;clientSecret;scopes;static cacheKey="spotify-sdk:ClientCredentialsStrategy:token";configuration=null;get cache(){return this.configuration.cachingStrategy}constructor(e,t,s=[]){this.clientId=e,this.clientSecret=t,this.scopes=s}setConfiguration(e){this.configuration=e}async getOrCreateAccessToken(){return await this.cache.getOrCreate(x.cacheKey,(async()=>{const e=await this.getTokenFromApi();return T.toCachable(e)}),(async e=>{const t=await this.getTokenFromApi();return T.toCachable(t)}))}async getAccessToken(){return await this.cache.get(x.cacheKey)}removeAccessToken(){this.cache.remove(x.cacheKey)}async getTokenFromApi(){const e={grant_type:"client_credentials",scope:this.scopes.join(" ")},t=Object.keys(e).map((t=>t+"="+e[t])).join("&"),s="undefined"!=typeof Buffer,i=`${this.clientId}:${this.clientSecret}`,r=s?Buffer.from(i).toString("base64"):btoa(i),n=await fetch("https://accounts.spotify.com/api/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Authorization:`Basic ${r}`},body:t});if(200!==n.status)throw new Error("Failed to get access token.");return await n.json()}}class q{clientId;redirectUri;scopes;static cacheKey="spotify-sdk:ImplicitGrantStrategy:token";configuration=null;get cache(){return this.configuration.cachingStrategy}constructor(e,t,s){this.clientId=e,this.redirectUri=t,this.scopes=s}setConfiguration(e){this.configuration=e}async getOrCreateAccessToken(){return await this.cache.getOrCreate(q.cacheKey,(async()=>{const e=await this.redirectOrVerifyToken();return T.toCachable(e)}),(async e=>T.refreshCachedAccessToken(this.clientId,e)))}async getAccessToken(){return await this.cache.get(q.cacheKey)}removeAccessToken(){this.cache.remove(q.cacheKey)}async redirectOrVerifyToken(){const e=new URLSearchParams(window.location.hash.substring(1)),t=e.get("access_token");if(t)return Promise.resolve({access_token:t,token_type:e.get("token_type")??"",expires_in:parseInt(e.get("expires_in")??"0"),refresh_token:e.get("refresh_token")??"",expires:Number(e.get("expires"))||0});var s=(this.scopes??[]).join(" ");const i=new URLSearchParams;i.append("client_id",this.clientId),i.append("response_type","token"),i.append("redirect_uri",this.redirectUri),i.append("scope",s);const r="https://accounts.spotify.com/authorize?"+i.toString();return this.configuration.redirectionStrategy.redirect(r),f}}class C{clientId;redirectUri;scopes;static cacheKey="spotify-sdk:AuthorizationCodeWithPKCEStrategy:token";configuration=null;get cache(){return this.configuration.cachingStrategy}constructor(e,t,s){this.clientId=e,this.redirectUri=t,this.scopes=s}setConfiguration(e){this.configuration=e}async getOrCreateAccessToken(){return await this.cache.getOrCreate(C.cacheKey,(async()=>{const e=await this.redirectOrVerifyToken();return T.toCachable(e)}),(async e=>T.refreshCachedAccessToken(this.clientId,e)))}async getAccessToken(){return await this.cache.get(C.cacheKey)}removeAccessToken(){this.cache.remove(C.cacheKey)}async redirectOrVerifyToken(){const e=new URLSearchParams(window.location.search).get("code");if(e){const t=await this.verifyAndExchangeCode(e);return this.removeCodeFromUrl(),t}return this.redirectToSpotify(),f}async redirectToSpotify(){const e=T.generateCodeVerifier(128),t=await T.generateCodeChallenge(e),s={verifier:e,expiresOnAccess:!0};this.cache.setCacheItem("spotify-sdk:verifier",s);const i=await this.generateRedirectUrlForUser(this.scopes,t);await this.configuration.redirectionStrategy.redirect(i)}async verifyAndExchangeCode(e){const t=await this.cache.get("spotify-sdk:verifier"),s=t?.verifier;if(!s)throw new Error("No verifier found in cache - can't validate query string callback parameters.");return await this.configuration.redirectionStrategy.onReturnFromRedirect(),await this.exchangeCodeForToken(e,s)}removeCodeFromUrl(){const e=new URL(window.location.href);e.searchParams.delete("code");const t=e.search?e.href:e.href.replace("?","");window.history.replaceState({},document.title,t)}async generateRedirectUrlForUser(e,t){const s=e.join(" "),i=new URLSearchParams;return i.append("client_id",this.clientId),i.append("response_type","code"),i.append("redirect_uri",this.redirectUri),i.append("scope",s),i.append("code_challenge_method","S256"),i.append("code_challenge",t),`https://accounts.spotify.com/authorize?${i.toString()}`}async exchangeCodeForToken(e,t){const s=new URLSearchParams;s.append("client_id",this.clientId),s.append("grant_type","authorization_code"),s.append("code",e),s.append("redirect_uri",this.redirectUri),s.append("code_verifier",t);const i=await fetch("https://accounts.spotify.com/api/token",{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:s}),r=await i.text();if(!i.ok)throw new Error(`Failed to exchange code for token: ${i.statusText}, ${r}`);return JSON.parse(r)}}class ${async deserialize(e){const t=await e.text();if(t.length>0){return JSON.parse(t)}return null}}class A{async validateResponse(e){switch(e.status){case 401:throw new Error("Bad or expired token. This can happen if the user revoked a token or the access token has expired. You should re-authenticate the user.");case 403:const t=await e.text();throw new Error(`Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here. Body: ${t}`);case 429:throw new Error("The app has exceeded its rate limits.");default:if(!e.status.toString().startsWith("20")){const t=await e.text();throw new Error(`Unrecognised response code: ${e.status} - ${e.statusText}. Body: ${t}`)}}}}class I{async handleErrors(e){return!1}}class F{async redirect(e){document.location=e.toString()}async onReturnFromRedirect(){}}class U{storage;updateFunctions;autoRenewInterval;autoRenewWindow;constructor(e,t=new Map,s=0,i=12e4){this.storage=e,this.updateFunctions=t,this.autoRenewInterval=s,this.autoRenewWindow=i,this.autoRenewInterval>0&&setInterval((()=>this.autoRenewRenewableItems()),this.autoRenewInterval)}async getOrCreate(e,t,s){s&&this.updateFunctions.set(e,s);const i=await this.get(e);if(i)return i;const r=await t();if(!r)throw new Error("Could not create cache item");return y(r)||this.setCacheItem(e,r),r}async get(e){let t=this.storage.get(e),s=t?JSON.parse(t):null;if(this.itemDueToExpire(s)&&this.updateFunctions.has(e)){const i=this.updateFunctions.get(e);await this.tryUpdateItem(e,s,i),t=this.storage.get(e),s=t?JSON.parse(t):null}return s?s.expires&&(-1===s.expires||s.expires<=Date.now())?(this.remove(e),null):s.expiresOnAccess&&!0===s.expiresOnAccess?(this.remove(e),s):s:null}set(e,t,s){const i={...t,expires:Date.now()+s};this.setCacheItem(e,i)}setCacheItem(e,t){const s=JSON.stringify(t);this.storage.set(e,s)}remove(e){this.storage.remove(e)}itemDueToExpire(e){return!!e&&(!!e.expires&&e.expires-Date.now()<this.autoRenewWindow)}async autoRenewRenewableItems(){this.updateFunctions.forEach((async(e,t)=>{const s=await this.get(t);s&&e&&this.itemDueToExpire(s)&&await this.tryUpdateItem(t,s,e)}))}async tryUpdateItem(e,t,s){try{const i=await s(t);i&&this.setCacheItem(e,i)}catch(e){console.error(e)}}}class E extends U{constructor(){super(new P)}}class P{get(e){return localStorage.getItem(e)}set(e,t){localStorage.setItem(e,t)}remove(e){localStorage.removeItem(e)}}class L extends U{constructor(){super(new O)}}class O{cache=new Map;get(e){return this.cache.get(e)??null}set(e,t){this.cache.set(e,t)}remove(e){this.cache.delete(e)}}class B{clientId;accessToken;refreshTokenAction;constructor(e,t,s){this.clientId=e,this.accessToken=t,this.refreshTokenAction=s||T.refreshCachedAccessToken,this.accessToken.expires||(this.accessToken.expires=T.calculateExpiry(this.accessToken))}setConfiguration(e){}async getOrCreateAccessToken(){if(this.accessToken.expires&&this.accessToken.expires<=Date.now()){const e=await this.refreshTokenAction(this.clientId,this.accessToken);this.accessToken=e}return this.accessToken}async getAccessToken(){return this.accessToken}removeAccessToken(){this.accessToken={access_token:"",token_type:"",expires_in:0,refresh_token:"",expires:0}}}class j{sdkConfig;static rootUrl="https://api.spotify.com/v1/";authenticationStrategy;albums;artists;audiobooks;browse;chapters;episodes;recommendations;markets;player;playlists;shows;tracks;users;search;currentUser;constructor(e,f){this.sdkConfig=this.initializeSdk(f),this.albums=new t(this),this.artists=new s(this),this.audiobooks=new i(this),this.browse=new r(this),this.chapters=new n(this),this.episodes=new a(this),this.recommendations=new o(this),this.markets=new c(this),this.player=new h(this),this.playlists=new u(this),this.shows=new p(this),this.tracks=new d(this),this.users=new m(this),this.currentUser=new g(this);const y=new l(this);this.search=y.execute.bind(y),this.authenticationStrategy=e,this.authenticationStrategy.setConfiguration(this.sdkConfig)}async makeRequest(e,t,s=void 0,i=void 0){try{const r=await this.authenticationStrategy.getOrCreateAccessToken();if(y(r))return console.warn("No access token found, authenticating now."),null;const n=r?.access_token,a=j.rootUrl+t,o={method:e,headers:{Authorization:`Bearer ${n}`,"Content-Type":i??"application/json"},body:s?"string"==typeof s?s:JSON.stringify(s):void 0};this.sdkConfig.beforeRequest(a,o);const c=await this.sdkConfig.fetch(a,o);return this.sdkConfig.afterRequest(a,o,c),204===c.status?null:(await this.sdkConfig.responseValidator.validateResponse(c),this.sdkConfig.deserializer.deserialize(c))}catch(e){if(!await this.sdkConfig.errorHandler.handleErrors(e))throw e;return null}}initializeSdk(e){const t="undefined"!=typeof window;return{...{fetch:(e,t)=>fetch(e,t),beforeRequest:(e,t)=>{},afterRequest:(e,t,s)=>{},deserializer:new $,responseValidator:new A,errorHandler:new I,redirectionStrategy:new F,cachingStrategy:t?new E:new L},...e}}switchAuthenticationStrategy(e){this.authenticationStrategy=e,this.authenticationStrategy.setConfiguration(this.sdkConfig),this.authenticationStrategy.getOrCreateAccessToken()}async authenticate(){const e=await this.authenticationStrategy.getOrCreateAccessToken();return{authenticated:e.expires>Date.now()&&!y(e),accessToken:e}}async getAccessToken(){return this.authenticationStrategy.getAccessToken()}logOut(){this.authenticationStrategy.removeAccessToken()}static withUserAuthorization(e,t,s=[],i){const r=new C(e,t,s);return new j(r,i)}static withClientCredentials(e,t,s=[],i){const r=new x(e,t,s);return new j(r,i)}static withImplicitGrant(e,t,s=[],i){const r=new q(e,t,s);return new j(r,i)}static withAccessToken(e,t,s){const i=new B(e,t);return new j(i,s)}static async performUserAuthorization(e,t,s,i,r){const n=new C(e,t,s),a=new j(n,r),o=await a.authenticationStrategy.getOrCreateAccessToken();return y(o)||("string"==typeof i?(console.log("Posting access token to postback URL."),await fetch(i,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(o)})):await i(o)),{authenticated:o.expires>Date.now()&&!y(o),accessToken:o}}}var H="undefined"!=typeof Buffer&&Buffer.from?function(e){return Buffer.from(e,"utf8")}:e=>(new TextEncoder).encode(e);function N(e){return e instanceof Uint8Array?e:"string"==typeof e?H(e):ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength/Uint8Array.BYTES_PER_ELEMENT):new Uint8Array(e)}function D(e){return"string"==typeof e?0===e.length:0===e.byteLength}var M={name:"SHA-256"},z={name:"HMAC",hash:M},K=new Uint8Array([227,176,196,66,152,252,28,20,154,251,244,200,153,111,185,36,39,174,65,228,100,155,147,76,164,149,153,27,120,82,184,85]);const V={};function J(){return"undefined"!=typeof window?window:"undefined"!=typeof self?self:V}var W=function(){function e(e){this.toHash=new Uint8Array(0),this.secret=e,this.reset()}return e.prototype.update=function(e){if(!D(e)){var t=N(e),s=new Uint8Array(this.toHash.byteLength+t.byteLength);s.set(this.toHash,0),s.set(t,this.toHash.byteLength),this.toHash=s}},e.prototype.digest=function(){var e=this;return this.key?this.key.then((function(t){return J().crypto.subtle.sign(z,t,e.toHash).then((function(e){return new Uint8Array(e)}))})):D(this.toHash)?Promise.resolve(K):Promise.resolve().then((function(){return J().crypto.subtle.digest(M,e.toHash)})).then((function(e){return Promise.resolve(new Uint8Array(e))}))},e.prototype.reset=function(){var e=this;this.toHash=new Uint8Array(0),this.secret&&void 0!==this.secret&&(this.key=new Promise((function(t,s){J().crypto.subtle.importKey("raw",N(e.secret),z,!1,["sign"]).then(t,s)})),this.key.catch((function(){})))},e}();function G(e,t,s,i){return new(s||(s=Promise))((function(r,n){function a(e){try{c(i.next(e))}catch(e){n(e)}}function o(e){try{c(i.throw(e))}catch(e){n(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(a,o)}c((i=i.apply(e,t||[])).next())}))}function Q(e,t){var s,i,r,n={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]},a=Object.create(("function"==typeof Iterator?Iterator:Object).prototype);return a.next=o(0),a.throw=o(1),a.return=o(2),"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(o){return function(c){return function(o){if(s)throw new TypeError("Generator is already executing.");for(;a&&(a=0,o[0]&&(n=0)),n;)try{if(s=1,i&&(r=2&o[0]?i.return:o[0]?i.throw||((r=i.return)&&r.call(i),0):i.next)&&!(r=r.call(i,o[1])).done)return r;switch(i=0,r&&(o=[2&o[0],r.value]),o[0]){case 0:case 1:r=o;break;case 4:return n.label++,{value:o[1],done:!1};case 5:n.label++,i=o[1],o=[0];continue;case 7:o=n.ops.pop(),n.trys.pop();continue;default:if(!(r=n.trys,(r=r.length>0&&r[r.length-1])||6!==o[0]&&2!==o[0])){n=0;continue}if(3===o[0]&&(!r||o[1]>r[0]&&o[1]<r[3])){n.label=o[1];break}if(6===o[0]&&n.label<r[1]){n.label=r[1],r=o;break}if(r&&n.label<r[2]){n.label=r[2],n.ops.push(o);break}r[2]&&n.ops.pop(),n.trys.pop();continue}o=t.call(e,n)}catch(e){o=[6,e],i=0}finally{s=r=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,c])}}}Object.create;Object.create;"function"==typeof SuppressedError&&SuppressedError;var Y=64,X=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),Z=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],ee=Math.pow(2,53)-1,te=function(){function e(){this.state=Int32Array.from(Z),this.temp=new Int32Array(64),this.buffer=new Uint8Array(64),this.bufferLength=0,this.bytesHashed=0,this.finished=!1}return e.prototype.update=function(e){if(this.finished)throw new Error("Attempted to update an already finished hash.");var t=0,s=e.byteLength;if(this.bytesHashed+=s,8*this.bytesHashed>ee)throw new Error("Cannot hash more than 2^53 - 1 bits");for(;s>0;)this.buffer[this.bufferLength++]=e[t++],s--,this.bufferLength===Y&&(this.hashBuffer(),this.bufferLength=0)},e.prototype.digest=function(){if(!this.finished){var e=8*this.bytesHashed,t=new DataView(this.buffer.buffer,this.buffer.byteOffset,this.buffer.byteLength),s=this.bufferLength;if(t.setUint8(this.bufferLength++,128),s%Y>=56){for(var i=this.bufferLength;i<Y;i++)t.setUint8(i,0);this.hashBuffer(),this.bufferLength=0}for(i=this.bufferLength;i<56;i++)t.setUint8(i,0);t.setUint32(56,Math.floor(e/4294967296),!0),t.setUint32(60,e),this.hashBuffer(),this.finished=!0}var r=new Uint8Array(32);for(i=0;i<8;i++)r[4*i]=this.state[i]>>>24&255,r[4*i+1]=this.state[i]>>>16&255,r[4*i+2]=this.state[i]>>>8&255,r[4*i+3]=this.state[i]>>>0&255;return r},e.prototype.hashBuffer=function(){for(var e=this.buffer,t=this.state,s=t[0],i=t[1],r=t[2],n=t[3],a=t[4],o=t[5],c=t[6],h=t[7],u=0;u<Y;u++){if(u<16)this.temp[u]=(255&e[4*u])<<24|(255&e[4*u+1])<<16|(255&e[4*u+2])<<8|255&e[4*u+3];else{var l=this.temp[u-2],p=(l>>>17|l<<15)^(l>>>19|l<<13)^l>>>10,d=((l=this.temp[u-15])>>>7|l<<25)^(l>>>18|l<<14)^l>>>3;this.temp[u]=(p+this.temp[u-7]|0)+(d+this.temp[u-16]|0)}var f=(((a>>>6|a<<26)^(a>>>11|a<<21)^(a>>>25|a<<7))+(a&o^~a&c)|0)+(h+(X[u]+this.temp[u]|0)|0)|0,y=((s>>>2|s<<30)^(s>>>13|s<<19)^(s>>>22|s<<10))+(s&i^s&r^i&r)|0;h=c,c=o,o=a,a=n+f|0,n=r,r=i,i=s,s=f+y|0}t[0]+=s,t[1]+=i,t[2]+=r,t[3]+=n,t[4]+=a,t[5]+=o,t[6]+=c,t[7]+=h},e}(),se=function(){function e(e){this.secret=e,this.hash=new te,this.reset()}return e.prototype.update=function(e){if(!D(e)&&!this.error)try{this.hash.update(N(e))}catch(e){this.error=e}},e.prototype.digestSync=function(){if(this.error)throw this.error;return this.outer?(this.outer.finished||this.outer.update(this.hash.digest()),this.outer.digest()):this.hash.digest()},e.prototype.digest=function(){return G(this,void 0,void 0,(function(){return Q(this,(function(e){return[2,this.digestSync()]}))}))},e.prototype.reset=function(){if(this.hash=new te,this.secret){this.outer=new te;var e=function(e){var t=N(e);if(t.byteLength>Y){var s=new te;s.update(t),t=s.digest()}var i=new Uint8Array(Y);return i.set(t),i}(this.secret),t=new Uint8Array(Y);t.set(e);for(var s=0;s<Y;s++)e[s]^=54,t[s]^=92;this.hash.update(e),this.outer.update(t);for(s=0;s<e.byteLength;s++)e[s]=0}},e}();var ie=["decrypt","digest","encrypt","exportKey","generateKey","importKey","sign","verify"];function re(e){return e&&ie.every((function(t){return"function"==typeof e[t]}))}var ne,ae,oe=function(){function e(e){!function(e){return!(!function(e){return"object"==typeof e&&"object"==typeof e.crypto&&"function"==typeof e.crypto.getRandomValues}(e)||"object"!=typeof e.crypto.subtle)&&re(e.crypto.subtle)}(J())?this.hash=new se(e):this.hash=new W(e)}return e.prototype.update=function(e,t){this.hash.update(N(e))},e.prototype.digest=function(){return this.hash.digest()},e.prototype.reset=function(){this.hash.reset()},e}();!function(e){e[e.None=-1]="None",e[e.AfterPrompt=0]="AfterPrompt",e[e.InChat=1]="InChat",e[e.BeforePrompt=2]="BeforePrompt"}(ne||(ne={})),function(e){e[e.System=0]="System",e[e.User=1]="User",e[e.Assistant=2]="Assistant"}(ae||(ae={}));const ce="spotify",he="spotify_inject",ue="spotify_verifier";var le=function(e,t,s,i){return new(s||(s=Promise))((function(r,n){function a(e){try{c(i.next(e))}catch(e){n(e)}}function o(e){try{c(i.throw(e))}catch(e){n(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(a,o)}c((i=i.apply(e,t||[])).next())}))};const{extensionSettings:pe,saveSettingsDebounced:de,setExtensionPrompt:fe,substituteParamsExtended:ye}=globalThis.SillyTavern.getContext(),me=Object.freeze({clientId:"",clientToken:null,template:"[{{user}} is listening to {{song}} by {{artist}} on Spotify]",position:ne.InChat,role:ae.System,depth:1});function ge(){pe[ce]||(pe[ce]=structuredClone(me));for(const e in me)void 0===pe[ce][e]&&(pe[ce][e]=me[e]);return pe[ce]}function we(e){var t;const s=null!==(t=document.getElementById("spotify_container"))&&void 0!==t?t:document.getElementById("extensions_settings2");if(!s)return;const i=document.createElement("template");i.innerHTML='<div id="spotify_settings"> <div class="inline-drawer"> <div class="inline-drawer-toggle inline-drawer-header"> <b> <span>Spotify</span> </b> <div class="inline-drawer-icon fa-solid fa-circle-chevron-down down"></div> </div> <div class="inline-drawer-content"> <div> <label for="spotify_client_id">Client ID</label> <input type="text" id="spotify_client_id" class="text_pole" placeholder="Spotify Client ID"/> </div> <div> <span>Logged in as:</span> <b id="spotify_user_name"></b> </div> <div class="flex-container"> <div id="spotify_auth" class="menu_button menu_button_icon"> <div class="fa-brands fa-spotify"></div> <span data-i18n="Authenticate">Authenticate</span> </div> <div id="spotify_logout" class="menu_button menu_button_icon"> <div class="fa-solid fa-right-from-bracket"></div> <span data-i18n="Logout">Logout</span> </div> </div> <div> <label for="spotify_template">Injection Template</label> <textarea id="spotify_template" class="text_pole textarea_compact" rows="2"></textarea> </div> <div> <label for="spotify_position">Injection Position</label> <div class="radio_group"> <label> <input type="radio" name="spotify_position" value="-1"/> <span data-i18n="None (not injected)">None (not injected)</span> </label> <label> <input type="radio" name="spotify_position" value="2"/> <span data-i18n="Before Main Prompt / Story String">Before Main Prompt / Story String</span> </label> <label> <input type="radio" name="spotify_position" value="0"/> <span data-i18n="After Main Prompt / Story String">After Main Prompt / Story String</span> </label> <label class="flex-container alignItemsCenter" title="How many messages before the current end of the chat." data-i18n="[title]How many messages before the current end of the chat."> <input type="radio" name="spotify_position" value="1"/> <span data-i18n="In-chat @ Depth">In-chat @ Depth</span> <input id="spotify_depth" class="text_pole widthUnset" type="number" min="0" max="999"/> <span data-i18n="as">as</span> <select id="spotify_role" class="text_pole widthNatural"> <option value="0" data-i18n="System">System</option> <option value="1" data-i18n="User">User</option> <option value="2" data-i18n="Assistant">Assistant</option> </select> </label> </div> </div> </div> </div> </div> ',s.appendChild(i.content);const r=document.getElementById("spotify_client_id"),n=document.getElementById("spotify_template"),a=document.getElementById("spotify_role"),o=Array.from(document.getElementsByName("spotify_position")),c=document.getElementById("spotify_depth");r.value=e.clientId,n.value=e.template,a.value=e.role.toString(),o.forEach((t=>{t.checked=e.position===parseInt(t.value)})),c.value=e.depth.toString(),r.addEventListener("input",(()=>{e.clientId=r.value,de()})),n.addEventListener("input",(()=>{e.template=n.value,de()})),a.addEventListener("input",(()=>{e.role=parseInt(a.value),de()})),o.forEach((t=>{t.addEventListener("change",(t=>{e.position=parseInt(t.target.value),de()}))})),c.addEventListener("input",(()=>{e.depth=parseInt(c.value),de()}));const h=document.getElementById("spotify_auth");null==h||h.addEventListener("click",(()=>{!function(){le(this,void 0,void 0,(function*(){const e=ge();if(!e.clientId)return void toastr.error("Please enter your Spotify Client ID in the settings.");const t=function(e){const t="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";return crypto.getRandomValues(new Uint8Array(e)).reduce(((e,s)=>e+t[s%62]),"")}(64),s=yield function(e){const t=(new TextEncoder).encode(e),s=new oe;return s.update(t),s.digest()}(t),i=(r=s,btoa(String.fromCharCode(...new Uint8Array(r))).replace(/=/g,"").replace(/\+/g,"-").replace(/\//g,"_"));var r;const n=new URL("/callback/spotify",location.origin),a={response_type:"code",client_id:e.clientId,scope:"user-read-private user-read-currently-playing",redirect_uri:n.toString(),code_challenge_method:"S256",code_challenge:i};sessionStorage.setItem(ue,t);const o=new URL("https://accounts.spotify.com/authorize");o.search=new URLSearchParams(a).toString(),window.location.href=o.toString()}))}()}));const u=document.getElementById("spotify_logout");null==u||u.addEventListener("click",(()=>{e.clientToken=null,ke("[Not logged in]"),de()}))}function ke(e){const t=document.getElementById("spotify_user_name");t&&(t.innerText=e)}function ve(e){return le(this,void 0,void 0,(function*(){const t=function(){const e=new URLSearchParams(window.location.search);if("spotify"!==e.get("source"))return null;const t=e.get("query");if(t){const e=new URLSearchParams(t).get("code");return window.history.replaceState({},document.title,window.location.pathname),e}return null}(),s=sessionStorage.getItem(ue);if(!t||!s||!e.clientId)return;const i=new URL("/callback/spotify",window.location.origin),r={method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({client_id:e.clientId,grant_type:"authorization_code",redirect_uri:i.toString(),code_verifier:s,code:t})};try{const t=yield fetch("https://accounts.spotify.com/api/token",r),s=yield t.json();e.clientToken=s,sessionStorage.removeItem(ue),de(),console.log("Spotify token received:",s),toastr.success("Successfully authenticated with Spotify!")}catch(e){console.error("Error during Spotify authentication:",e),toastr.error("Spotify authentication failed. Please try again.")}}))}function be(e){return le(this,void 0,void 0,(function*(){if(!e.clientToken||!e.clientId)return;const t=e.clientToken.expires,s=e.clientToken.refresh_token,i=Date.now();if(t&&t-i<3e5){const t="https://accounts.spotify.com/api/token",i={method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({grant_type:"refresh_token",refresh_token:s,client_id:e.clientId})};try{const r=yield fetch(t,i),n=yield r.json();e.clientToken=n,e.clientToken&&!n.refresh_token&&(e.clientToken.refresh_token=s),console.log("Spotify token refreshed:",n),de()}catch(e){console.error("Error refreshing Spotify token:",e)}}}))}function Re(){return le(this,void 0,void 0,(function*(){fe(he,"");const e=ge();if(e.clientToken&&e.clientId&&e.template)try{yield be(e);const t=j.withAccessToken(e.clientId,e.clientToken),s=yield t.player.getCurrentlyPlayingTrack();console.log("Currently playing Spotify track:",s);const i=function(e){var t;if(!e)return{};switch(e.type){case"track":{const s=e;return{song:s.name,artist:null===(t=s.artists.map((e=>e.name)))||void 0===t?void 0:t.join(", "),album:s.album.name,year:s.album.release_date.split("-")[0]}}case"show":{const t=e;return{song:t.name,artist:t.show.name}}}return{}}(s.item),r=ye(e.template,i);fe(he,r,e.position,e.depth,!0,e.role)}catch(e){console.error("Error fetching currently playing track:",e)}}))}!function(){le(this,void 0,void 0,(function*(){const e=ge();we(e),yield ve(e),yield be(e),yield function(e){return le(this,void 0,void 0,(function*(){if(e.clientToken&&e.clientId)try{const t=j.withAccessToken(e.clientId,e.clientToken),s=yield t.currentUser.profile();ke(s.display_name||s.id)}catch(t){console.error("Error fetching user data:",t),e.clientToken=null,ke("[Token expired]")}else ke("[Not logged in]")}))}(e),globalThis.spotify_setCurrentTrack=Re,de()}))}()})();